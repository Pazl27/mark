name: Deploy Documentation

on:
  # Trigger on pushes to main branch that affect docs
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - '.github/workflows/deploy-docs.yml'
  
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history to ensure symbolic links work properly
          fetch-depth: 0
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install mdBook
        run: |
          cargo install mdbook --version ^0.4
          mdbook --version
      
      - name: Verify symbolic links
        run: |
          echo "Checking symbolic links in docs/src/"
          ls -la docs/src/
          echo "Checking if LICENSE is readable via symlink:"
          if [ -L "docs/src/LICENSE.md" ]; then
            echo "Symlink exists, checking target:"
            readlink docs/src/LICENSE.md
            echo "Content preview:"
            head -5 docs/src/LICENSE.md || echo "Could not read symlink target"
          else
            echo "No LICENSE.md symlink found"
          fi
      
      - name: Copy LICENSE to docs if symlink fails
        run: |
          # Backup solution: copy LICENSE if symlink doesn't work in CI
          if [ ! -r "docs/src/LICENSE.md" ] || [ ! -s "docs/src/LICENSE.md" ]; then
            echo "Symlink not working in CI, copying LICENSE file"
            cp LICENSE docs/src/LICENSE.md
          fi
      
      - name: Build documentation
        run: |
          cd docs
          mdbook build
          echo "Build completed, checking output:"
          ls -la book/
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs/book'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Optional: Notify on deployment
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Deployment Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Documentation deployed successfully!"
            echo "üìñ Visit: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          else
            echo "‚ùå Documentation deployment failed"
            echo "Check the logs above for details"
          fi